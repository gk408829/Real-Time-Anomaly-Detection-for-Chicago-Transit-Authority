services:
  # CTA Anomaly Detection API
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: cta-anomaly-api
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data:ro
      - ../models:/app/models
    environment:
      - PYTHONPATH=/app
    command: ["uvicorn", "src.api.app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dashboard
    container_name: cta-anomaly-dashboard
    ports:
      - "8501:8501"
    volumes:
      - ../data:/app/data:ro
      - ../models:/app/models:ro
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://api:8000
    command: ["streamlit", "run", "src/dashboard/dashboard.py", "--server.address", "0.0.0.0", "--server.port", "8501"]
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

  # Data Collection Service (runs as cron job)
  data-collector:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: cta-data-collector
    volumes:
      - ../data:/app/data
    environment:
      - PYTHONPATH=/app
      - CTA_API_KEY=${CTA_API_KEY}
    command: ["python", "src/data_collection/fetch_data.py"]
    restart: "no"
    profiles:
      - data-collection

networks:
  default:
    name: cta-anomaly-network